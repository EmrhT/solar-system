name: Solar System Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'

env:
    MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
    MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
    MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }} 

jobs:
  unit-testing:
    name: Unit Testing
    services:
      mongo-db:
        image: siddharth67/mongo-db:non-prod
        ports:
          - 27017:27017
    env:
      MONGO_URI: 'mongodb//localhost:27017/superData'
      MONGO_USERNAME: non-prod-user
      MONGO_PASSWORD: non-prod-password
    strategy:
      matrix:
        nodejs_version: [18, 20]
        operating_system: [ubuntu-latest]
        exclude:
        - nodejs_version: 18
          operating_system: macos-latest
    runs-on: ${{ matrix.operating_system }}        
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Setup NodeJS Version - ${{ matrix.nodejs_version }}   # npm comes with this installation
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.nodejs_version }}

    - name: Cache NPM dependencies
      uses: actions/cache@v3
      with:
        path: node_modules
        key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }} # with the help of "hashFiles() "whenever this value changes, cache invalidates and new value is cached.

    - name: Install Dependencies
      run: npm install

    - name: Unit Testing
      id: nodejs-unit-testing-step
      run: npm test

    - name: Archive Test Result
      if: always() # this step will be executed regardless of the previous step result. Here we need to see testing report to troubleshoot.
      uses: actions/upload-artifact@v3
      with:
        name: Mocha-Test-Result
        path: test-results.xml
  
  code-coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Setup NodeJS Version - 18
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Cache NPM dependencies
      uses: actions/cache@v3
      with:
        path: node_modules
        key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}

    - name: Install Dependencies
      run: npm install

    - name: Check Code Coverage
      continue-on-error: true
      run: npm run coverage

    - name: Archive Test Result
      uses: actions/upload-artifact@v3
      with:
        name: Code-Coverage-Result
        path: coverage
        retention-days: 5 # this enables to tune storage time of artifacts, default is 90
      
  containerization:
    name: Containerization
    needs: [unit-testing, code-coverage] # needed for sequential execution after unit test and code-coverage
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v4

    - name: Dockerhub Login
      uses: docker/login-action@v2.2.0
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Docker Build For Testing
      uses: docker/build-push-action@v4
      with:
        context: . # search for the Dockerfile in current directory
        push: false
        tags: ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}

    - name: Docker Image Testing
      run: |
        docker images
        docker run --name solar-system-app -d  \
            -p 3000:3000 \
            -e MONGO_URI=$MONGO_URI \
            -e MONGO_USERNAME=$MONGO_USERNAME \
            -e MONGO_PASSWORD=$MONGO_PASSWORD \
            ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}
        
        export IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' solar-system-app)
        echo $IP        
        echo Testing Image URL using wget 
        wget -q -O - 127.0.0.1:3000/live | grep live

    - name: Docker Push
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}